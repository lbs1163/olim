# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-01-26 19:48
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import rpg.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Battle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ally_health', models.IntegerField(default=100)),
                ('enemy_health', models.IntegerField(default=0)),
                ('turn', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Bossbattle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ally_health', models.IntegerField(default=100)),
                ('ready', models.BooleanField(default=False)),
                ('turn', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Bossbattlemanager',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enemy_health', models.IntegerField(default=100000)),
                ('boss_type', models.CharField(blank=True, max_length=10, null=True)),
                ('banned_type', models.CharField(blank=True, max_length=10, null=True)),
                ('turn', models.IntegerField(default=0)),
                ('state', models.CharField(default='waiting', max_length=20)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('bossskill', models.IntegerField(blank=True, default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Bossgrade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=5)),
                ('turn', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Bossmonster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('img', models.ImageField(default='images/monster/default.png', upload_to='images/monster/')),
                ('health', models.IntegerField(default=100000)),
                ('damage', models.IntegerField(default=10)),
            ],
        ),
        migrations.CreateModel(
            name='Bossmonsterbook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bossmonster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rpg.Bossmonster')),
                ('grade', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='rpg.Bossgrade')),
            ],
        ),
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('math', models.IntegerField(default=0)),
                ('phys', models.IntegerField(default=0)),
                ('chem', models.IntegerField(default=0)),
                ('life', models.IntegerField(default=0)),
                ('prog', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Clothes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('img', models.ImageField(default='images/clothes/default.png', upload_to='images/clothes/')),
            ],
        ),
        migrations.CreateModel(
            name='Combination',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Eye',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('img', models.ImageField(default='images/eye/default.png', upload_to='images/eye/')),
            ],
        ),
        migrations.CreateModel(
            name='FailedCombination',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=5)),
                ('turn', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Hair',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('img', models.ImageField(default='images/hair/default.png', upload_to='images/hair/')),
            ],
        ),
        migrations.CreateModel(
            name='Have',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(default=0)),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rpg.Character')),
            ],
        ),
        migrations.CreateModel(
            name='Map',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('is_open', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Monster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('img', models.ImageField(default='images/monster/default.png', upload_to='images/monster/')),
                ('math_exp', models.IntegerField(default=0)),
                ('phys_exp', models.IntegerField(default=0)),
                ('chem_exp', models.IntegerField(default=0)),
                ('life_exp', models.IntegerField(default=0)),
                ('prog_exp', models.IntegerField(default=0)),
                ('health', models.IntegerField(default=0)),
                ('drop_rate', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
                ('dialog1', models.CharField(default='dialog1', max_length=50)),
                ('dialog2', models.CharField(default='dialog2', max_length=50)),
                ('dialog3', models.CharField(default='dialog3', max_length=50)),
                ('dialog4', models.CharField(default='dialog4', max_length=50)),
                ('dialog5', models.CharField(default='dialog5', max_length=50)),
                ('death_dialog', models.CharField(default='death dialog', max_length=50)),
                ('map', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='rpg.Map')),
            ],
        ),
        migrations.CreateModel(
            name='Monsterbook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('champion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='champion', to='rpg.Character')),
                ('finder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='finder', to='rpg.Character')),
                ('grade', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='rpg.Grade')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rpg.Group')),
                ('monster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rpg.Monster')),
            ],
        ),
        migrations.CreateModel(
            name='RegistrationCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(default=rpg.models.random_string, max_length=20)),
                ('first_name', models.CharField(max_length=20)),
                ('last_name', models.CharField(max_length=20)),
                ('is_used', models.BooleanField(default=False)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rpg.Group')),
            ],
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_open', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('math', models.BooleanField(default=False)),
                ('phys', models.BooleanField(default=False)),
                ('chem', models.BooleanField(default=False)),
                ('life', models.BooleanField(default=False)),
                ('prog', models.BooleanField(default=False)),
                ('health', models.IntegerField(default=10)),
                ('damage', models.IntegerField(default=0)),
                ('limit', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Skillbook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('finder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rpg.Character')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rpg.Group')),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rpg.Skill')),
            ],
        ),
        migrations.AddField(
            model_name='monster',
            name='skill',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rpg.Skill'),
        ),
        migrations.AddField(
            model_name='have',
            name='skill',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rpg.Skill'),
        ),
        migrations.AddField(
            model_name='failedcombination',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rpg.Group'),
        ),
        migrations.AddField(
            model_name='failedcombination',
            name='skill001',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skill001', to='rpg.Skill'),
        ),
        migrations.AddField(
            model_name='failedcombination',
            name='skill002',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skill002', to='rpg.Skill'),
        ),
        migrations.AddField(
            model_name='combination',
            name='new_skill',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='new_skill', to='rpg.Skill'),
        ),
        migrations.AddField(
            model_name='combination',
            name='skill01',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skill01', to='rpg.Skill'),
        ),
        migrations.AddField(
            model_name='combination',
            name='skill02',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skill02', to='rpg.Skill'),
        ),
        migrations.AddField(
            model_name='character',
            name='clothes',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rpg.Clothes'),
        ),
        migrations.AddField(
            model_name='character',
            name='eye',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rpg.Eye'),
        ),
        migrations.AddField(
            model_name='character',
            name='group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rpg.Group'),
        ),
        migrations.AddField(
            model_name='character',
            name='hair',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rpg.Hair'),
        ),
        migrations.AddField(
            model_name='character',
            name='skill1',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='skill1', to='rpg.Skill'),
        ),
        migrations.AddField(
            model_name='character',
            name='skill2',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='skill2', to='rpg.Skill'),
        ),
        migrations.AddField(
            model_name='character',
            name='skill3',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='skill3', to='rpg.Skill'),
        ),
        migrations.AddField(
            model_name='character',
            name='skill4',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='skill4', to='rpg.Skill'),
        ),
        migrations.AddField(
            model_name='character',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='bossmonsterbook',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rpg.Group'),
        ),
        migrations.AddField(
            model_name='bossmonster',
            name='map',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rpg.Map'),
        ),
        migrations.AddField(
            model_name='bossbattlemanager',
            name='bossmonster',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rpg.Bossmonster'),
        ),
        migrations.AddField(
            model_name='bossbattlemanager',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rpg.Group'),
        ),
        migrations.AddField(
            model_name='bossbattle',
            name='character',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='rpg.Character'),
        ),
        migrations.AddField(
            model_name='bossbattle',
            name='skill',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rpg.Skill'),
        ),
        migrations.AddField(
            model_name='battle',
            name='character',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='rpg.Character'),
        ),
        migrations.AddField(
            model_name='battle',
            name='monster',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rpg.Monster'),
        ),
    ]
